(page "index.html"
  (:require-macros
    [javelin.core :refer [defc defc=]])
  (:require
    [users-crud.rpc :as rpc]))

(rpc/init)

(defc= users-table
  (table {:border "1"}
    (tr (th "id") (th "name") (th "action"))
      (for [user rpc/users]
        (tr (-> user :id td) (-> user :name td)
          (td (a :href "#" :click #(rpc/edit-user (:id user)) "foo"))))))

(defn clear-sys [] (reset! rpc/systems []))
(defn new-sys []
  (if-let [name (js/prompt "Type the system's name")]
    (rpc/create-system name)))

(defc= edit-cell
  (if (empty? rpc/systems)
    (a :href "#" :click #(rpc/get-systems) "Add System")
    (span (select
            (for [system rpc/systems]
              (option :value (:id system) (:name system))))
      " "
      (button :click #(println "Foo") "Add to user")
      " "
      (a :href "#" :click #(clear-sys) "Cancel")
      " "
      (a :href "#" :click #(new-sys) "New system"))))

(defn edit-user [user]
  (div
    (->> user :name (str "Editing user: ") h2)
    (hr)
    (h3 "Systems:")
    (ul
      (for [system (:systems user)]
        (li (:name system) (a :click #(rpc/remove-system (:id system)) "Remove"))))
    (p edit-cell)
    (p (a :href "#" :click #(reset! rpc/user-to-edit nil) "Cancel edit"))))

(defc= code-to-render
  (if-let [editing (:editing rpc/state)]
    (edit-user editing)
    users-table))

(html
  (head
    (link :href "app.css" :rel "stylesheet"))
  (body

    (h1 (text "Users"))

    (div code-to-render)
    ))
